<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/09/10/hello-world/"/>
      <url>/2022/09/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ESP32入门学习资料</title>
      <link href="/2022/09/07/ls/"/>
      <url>/2022/09/07/ls/</url>
      
        <content type="html"><![CDATA[<h1 id="入门ESP32的资源集合（网站、工具等）"><a href="#入门ESP32的资源集合（网站、工具等）" class="headerlink" title="入门ESP32的资源集合（网站、工具等）"></a>入门ESP32的资源集合（网站、工具等）</h1><h2 id="1、参考资料网站"><a href="#1、参考资料网站" class="headerlink" title="1、参考资料网站"></a>1、参考资料网站</h2><p>乐鑫官方：<a href="https://www.espressif.com.cn/zh-hans"> 乐鑫科技 (espressif.com.cn)</a></p><p>官方API参考：<a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/api-reference/index.html#">API 参考 - ESP32 - — ESP-IDF 编程指南 latest 文档 (espressif.com)</a></p><p>AT固件使用参考：<a href="https://docs.espressif.com/projects/esp-at/zh_CN/latest/esp32/">ESP-AT 用户指南 - ESP32 - — ESP-AT 用户指南 latest 文档 (espressif.com)</a></p><p>乐鑫官方在Github上面的库，开源的代码都在上面：<a href="https://github.com/espressif">Espressif Systems (github.com)</a></p><h2 id="2、工具"><a href="#2、工具" class="headerlink" title="2、工具"></a>2、工具</h2><p>固件（ｂｉｎ文件）下载工具flash：<a href="https://www.espressif.com.cn/zh-hans/support/download/other-tools">工具 | 乐鑫科技 (espressif.com.cn)</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ESP32学习之GPIO</title>
      <link href="/2022/09/07/GPIO/"/>
      <url>/2022/09/07/GPIO/</url>
      
        <content type="html"><![CDATA[<h1 id="ESP32外设学习——GPIO入门学习"><a href="#ESP32外设学习——GPIO入门学习" class="headerlink" title="ESP32外设学习——GPIO入门学习"></a>ESP32外设学习——GPIO入门学习</h1><h2 id="一、资料"><a href="#一、资料" class="headerlink" title="一、资料"></a>一、资料</h2><h3 id="1-1-官方资料"><a href="#1-1-官方资料" class="headerlink" title="1.1 官方资料"></a>1.1 官方资料</h3><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fdocs.espressif.com%2Fprojects%2Fesp-idf%2Fzh_CN%2Flatest%2Fesp32%2Fapi-reference%2Fperipherals%2Fgpio.html%23gpio-rtc-gpio">ESP-IDF 编程指南——GPIO&amp;RTC GPIO</a></p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.espressif.com%2Fsites%2Fdefault%2Ffiles%2Fdocumentation%2Fesp32_technical_reference_manual_cn.pdf">ESP32 技术参考手册——4 IO_MUX 和 GPIO 交换矩阵 (GPIO, IO_MUX)</a></p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fespressif%2Fesp-idf%2Fblob%2F1cb31e50943bb757966ca91ed7f4852692a5b0ed%2Fexamples%2Fperipherals%2Fgpio%2Fgeneric_gpio%2Fmain%2Fgpio_example_main.c">官方案例 gpio_example</a></p><h3 id="1-2开发板介绍"><a href="#1-2开发板介绍" class="headerlink" title="1.2开发板介绍"></a>1.2开发板介绍</h3><p>ESP32-DevKitC V4 开发板的主要组件、接口及控制方式见下。</p><p><img src="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/_images/esp32-devkitc-functional-overview.jpg" alt="ESP32-DevKitC V4（板载 ESP32-WROOM-32）"></p><p>​                                                             ESP32-DevKitC V4（板载 ESP32-WROOM-32）</p><div class="table-container"><table><thead><tr><th>主要组件</th><th>基本介绍</th></tr></thead><tbody><tr><td>ESP32-WROOM-32</td><td>基于 ESP32 的模组。更多详情，请见 <a href="https://espressif.com/sites/default/files/documentation/esp32-wroom-32_datasheet_cn.pdf">《ESP32-WROOM-32 技术规格书》</a>。</td></tr><tr><td>EN</td><td>复位按键。</td></tr><tr><td>Boot</td><td>下载按键。按下 <strong>Boot</strong> 键并保持，同时按一下 <strong>EN</strong> 键（此时不要松开 <strong>Boot</strong> 键）进入“固件下载”模式，通过串口下载固件。</td></tr><tr><td>USB-to-UART 桥接器</td><td>单芯片 USB-UART 桥接器，可提供高达 3 Mbps 的传输速率。</td></tr><tr><td>Micro USB 接口。</td><td>USB 接口，可用作电路板的供电电源，或连接 PC 和 ESP32-WROOM-32 模组的通信接口。</td></tr><tr><td>5V Power On LED</td><td>开发板通电后（USB 或外部 5 V），该指示灯将亮起。更多信息，请见 <a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/hw-reference/esp32/get-started-devkitc.html#id10">相关文档</a> 中的原理图。</td></tr><tr><td>I/O</td><td>板上模组的绝大部分管脚均已引出至开发板的排针。用户可以对 ESP32 进行编程，实现 PWM、ADC、DAC、I2C、I2S、SPI 等多种功能。</td></tr></tbody></table></div><h3 id="1-3-IO功能表"><a href="#1-3-IO功能表" class="headerlink" title="1.3 IO功能表"></a>1.3 IO功能表</h3><div class="table-container"><table><thead><tr><th>编号</th><th>名称</th><th>类型</th><th>功能</th></tr></thead><tbody><tr><td>1</td><td>3V3</td><td>P</td><td>3.3 V 电源</td></tr><tr><td>2</td><td>EN</td><td>I</td><td>CHIP_PU, Reset</td></tr><tr><td>3</td><td>IO36</td><td>I</td><td>GPIO36, ADC1_CH0, S_VP</td></tr><tr><td>4</td><td>IO39</td><td>I</td><td>GPIO39, ADC1_CH3, S_VN</td></tr><tr><td>5</td><td>IO34</td><td>I</td><td>GPIO34, ADC1_CH6, VDET_1</td></tr><tr><td>6</td><td>IO35</td><td>I</td><td>GPIO35, ADC1_CH7, VDET_2</td></tr><tr><td>7</td><td>IO32</td><td>I/O</td><td>GPIO32, ADC1_CH4, TOUCH_CH9, XTAL_32K_P</td></tr><tr><td>8</td><td>IO33</td><td>I/O</td><td>GPIO33, ADC1_CH5, TOUCH_CH8, XTAL_32K_N</td></tr><tr><td>9</td><td>IO25</td><td>I/O</td><td>GPIO25, ADC1_CH8, DAC_1</td></tr><tr><td>10</td><td>IO26</td><td>I/O</td><td>GPIO26, ADC2_CH9, DAC_2</td></tr><tr><td>11</td><td>IO27</td><td>I/O</td><td>GPIO27, ADC2_CH7, TOUCH_CH7</td></tr><tr><td>12</td><td>IO14</td><td>I/O</td><td>GPIO14, ADC2_CH6, TOUCH_CH6, MTMS</td></tr><tr><td>13</td><td>IO12</td><td>I/O</td><td>GPIO12, ADC2_CH5, TOUCH_CH5, MTDI</td></tr><tr><td>14</td><td>GND</td><td>G</td><td>接地</td></tr><tr><td>15</td><td>IO13</td><td>I/O</td><td>GPIO13, ADC2_CH4, TOUCH_CH4, MTCK</td></tr><tr><td>16</td><td>IO9</td><td>I/O</td><td>GPIO9, D2</td></tr><tr><td>17</td><td>IO10</td><td>I/O</td><td>GPIO10, D3</td></tr><tr><td>18</td><td>IO11</td><td>I/O</td><td>GPIO11, CMD</td></tr><tr><td>19</td><td>5V0</td><td>P</td><td>5 V 电源</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>编号</th><th>名称</th><th>类型</th><th>功能</th></tr></thead><tbody><tr><td>1</td><td>GND</td><td>G</td><td>接地</td></tr><tr><td>2</td><td>IO23</td><td>I/O</td><td>GPIO23</td></tr><tr><td>3</td><td>IO22</td><td>I/O</td><td>GPIO22</td></tr><tr><td>4</td><td>IO1</td><td>I/O</td><td>GPIO1, U0TXD</td></tr><tr><td>5</td><td>IO3</td><td>I/O</td><td>GPIO3, U0RXD</td></tr><tr><td>6</td><td>IO21</td><td>I/O</td><td>GPIO21</td></tr><tr><td>7</td><td>GND</td><td>G</td><td>接地</td></tr><tr><td>8</td><td>IO19</td><td>I/O</td><td>GPIO19</td></tr><tr><td>9</td><td>IO18</td><td>I/O</td><td>GPIO18</td></tr><tr><td>10</td><td>IO5</td><td>I/O</td><td>GPIO5</td></tr><tr><td>11</td><td>IO17</td><td>I/O</td><td>GPIO17</td></tr><tr><td>12</td><td>IO16</td><td>I/O</td><td>GPIO16</td></tr><tr><td>13</td><td>IO4</td><td>I/O</td><td>GPIO4, ADC2_CH0, TOUCH_CH0</td></tr><tr><td>14</td><td>IO0</td><td>I/O</td><td>GPIO0, ADC2_CH1, TOUCH_CH1, Boot</td></tr><tr><td>16</td><td>IO2</td><td>I/O</td><td>GPIO2, ADC2_CH2, TOUCH_CH2</td></tr><tr><td>17</td><td>IO15</td><td>I/O</td><td>GPIO15, ADC2_CH3, TOUCH_CH3, MTDO</td></tr><tr><td>17</td><td>IO8</td><td>I/O</td><td>GPIO8, D1</td></tr><tr><td>18</td><td>IO7</td><td>I/O</td><td>GPIO7, D0</td></tr><tr><td>19</td><td>IO6</td><td>I/O</td><td>GPIO6, SCK</td></tr></tbody></table></div><blockquote><p>P：电源； I：输入； O：输出。</p></blockquote><p><strong>管脚布局</strong><img src="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/_images/esp32-devkitC-v4-pinout.png" alt="ESP32-DevKitC 管脚布局（点击放大）" style="zoom:80%;" /></p><p>​                                                                                                                      ESP32-DevKitC 管脚布局</p><h2 id="二、GPIO的使用"><a href="#二、GPIO的使用" class="headerlink" title="二、GPIO的使用"></a>二、GPIO的使用</h2><h3 id="2-1-包含头文件"><a href="#2-1-包含头文件" class="headerlink" title="2.1 包含头文件"></a>2.1 包含头文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;driver/gpio.h&quot;</span></span></span><br></pre></td></tr></table></figure><h3 id="2-2-GPIO的配置"><a href="#2-2-GPIO的配置" class="headerlink" title="2.2 GPIO的配置"></a>2.2 GPIO的配置</h3><h4 id="GPIO的输出"><a href="#GPIO的输出" class="headerlink" title="GPIO的输出"></a>GPIO的输出</h4><p><strong>直接初始化（适用于IDF4.4及之前的版本）</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">gpio_pad_select_gpio</span>(GPIO_NUM_2);                <span class="comment">// 选择一个GPIO</span></span><br><span class="line"><span class="built_in">gpio_set_direction</span>(GPIO_NUM_2, GPIO_MODE_OUTPUT);<span class="comment">// 把这个GPIO作为输出</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">gpio_set_level</span>(GPIO_NUM_2, <span class="number">1</span>);                   <span class="comment">// 把这个GPIO输出高电平</span></span><br></pre></td></tr></table></figure><p> <strong>结构体方法</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_OUTPUT_IO_0    2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_OUTPUT_PIN_SEL  (1ULL&lt;&lt;GPIO_OUTPUT_IO_0)  <span class="comment">// 配置GPIO_OUT位寄存器</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">gpio_init</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">gpio_config_t</span> io_conf;  <span class="comment">// 定义一个gpio_config类型的结构体，下面的都算对其进行的配置</span></span><br><span class="line"></span><br><span class="line">    io_conf.intr_type = GPIO_PIN_INTR_DISABLE;  <span class="comment">// 禁止中断  </span></span><br><span class="line">    io_conf.mode = GPIO_MODE_OUTPUT;            <span class="comment">// 选择输出模式</span></span><br><span class="line">    io_conf.pin_bit_mask = GPIO_OUTPUT_PIN_SEL; <span class="comment">// 配置GPIO_OUT寄存器</span></span><br><span class="line">    io_conf.pull_down_en = <span class="number">0</span>;                   <span class="comment">// 禁止下拉</span></span><br><span class="line">    io_conf.pull_up_en = <span class="number">0</span>;                     <span class="comment">// 禁止上拉</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">gpio_config</span>(&amp;io_conf);                      <span class="comment">// 最后配置使能</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">gpio_set_level</span>(GPIO_OUTPUT_IO_0, <span class="number">0</span>);            <span class="comment">// 把这个GPIO输出低电平</span></span><br><span class="line"><span class="built_in">gpio_set_level</span>(GPIO_OUTPUT_IO_0, <span class="number">1</span>);            <span class="comment">// 把这个GPIO输出高电平</span></span><br></pre></td></tr></table></figure><p><strong>示例</strong>：LED灯闪烁</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;freertos/FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;freertos/task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;driver/gpio.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">app_main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">gpio_pad_select_gpio</span>(GPIO_NUM_2);</span><br><span class="line">    <span class="comment">//gpio_init();</span></span><br><span class="line">    <span class="comment">/* Set the GPIO as a push/pull output */</span></span><br><span class="line">    <span class="built_in">gpio_set_direction</span>(GPIO_NUM_2, GPIO_MODE_OUTPUT);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* Blink off (output low) */</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Turning off the LED\n&quot;</span>);</span><br><span class="line">        <span class="built_in">gpio_set_level</span>(GPIO_NUM_2, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">vTaskDelay</span>(<span class="number">1000</span> / portTICK_PERIOD_MS);</span><br><span class="line">        <span class="comment">/* Blink on (output high) */</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Turning on the LED\n&quot;</span>);</span><br><span class="line">        <span class="built_in">gpio_set_level</span>(GPIO_NUM_2, <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">vTaskDelay</span>(<span class="number">1000</span> / portTICK_PERIOD_MS);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>电路连接图：</p><p><img src="C:\Users\Administrator\Desktop\工作日记（2022.5.23）\视频剪辑\素材\外设\GPIO\Untitled Sketch 2_bb.png" alt="Untitled Sketch 2_bb" style="zoom:80%;" /></p><h4 id="GPIO输入"><a href="#GPIO输入" class="headerlink" title="GPIO输入"></a>GPIO输入</h4><p><strong>直接初始化（适用于IDF4.4及之前的版本）</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">gpio_pad_select_gpio</span>(GPIO_NUM_4);                 <span class="comment">// 选择一个GPIO</span></span><br><span class="line"><span class="built_in">gpio_set_direction</span>(GPIO_NUM_4, GPIO_MODE_INPUT);  <span class="comment">// 把这个GPIO作为输入</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">gpio_get_level</span>(GPIO_NUM_4);                        <span class="comment">//读取这个GPIO电平</span></span><br></pre></td></tr></table></figure><p> <strong>结构体方法</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_INPUT_IO_0    4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_INPUT_PIN_SEL  (1ULL&lt;&lt;GPIO_INPUT_IO_0)  <span class="comment">// 配置GPIO_IN位寄存器</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">gpio_init</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">gpio_config_t</span> io_conf;  <span class="comment">// 定义一个gpio_config类型的结构体，下面的都算对其进行的配置</span></span><br><span class="line"></span><br><span class="line">    io_conf.intr_type = GPIO_PIN_INTR_DISABLE;  <span class="comment">// 禁止中断  </span></span><br><span class="line">    io_conf.mode = GPIO_MODE_INPUT;             <span class="comment">// 选择输入模式</span></span><br><span class="line">    io_conf.pin_bit_mask = GPIO_INPUT_PIN_SEL;  <span class="comment">// 配置GPIO_IN寄存器</span></span><br><span class="line">    io_conf.pull_down_en = <span class="number">0</span>;                   <span class="comment">// 禁止下拉</span></span><br><span class="line">    io_conf.pull_up_en = <span class="number">0</span>;                     <span class="comment">// 禁止上拉</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">gpio_config</span>(&amp;io_conf);                      <span class="comment">// 最后配置使能</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">gpio_get_level</span>(GPIO_INPUT_IO_0);            <span class="comment">// 读取这个GPIO电平</span></span><br></pre></td></tr></table></figure><h2 id="三、综合案例"><a href="#三、综合案例" class="headerlink" title="三、综合案例"></a>三、综合案例</h2><p>用按键控制LED灯：用GPIO4获取到按键的输出电平来确定按键是否被按下，确定按键的状态之后通过GPIO2输出高低电平来控制LED灯的亮灭</p><p>代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;freertos/FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;freertos/task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;driver/gpio.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">gpio_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//使用建构体初始化的方法，初始化控制LED灯的GPIO</span></span><br><span class="line">    <span class="type">gpio_config_t</span> io_config =</span><br><span class="line">        &#123;</span><br><span class="line">            .pin_bit_mask = (<span class="number">1</span> &lt;&lt; GPIO_NUM_2) | (<span class="number">1</span> &lt;&lt; GPIO_NUM_4), <span class="comment">//你想设置的引脚</span></span><br><span class="line">            .mode = GPIO_MODE_OUTPUT,                              <span class="comment">//设置为输出模式</span></span><br><span class="line">            .pull_down_en = <span class="number">0</span>,                                     <span class="comment">//关闭下拉模式</span></span><br><span class="line">            .pull_up_en = <span class="number">0</span>,                                       <span class="comment">//禁用牵引模式</span></span><br><span class="line">            .intr_type = GPIO_INTR_DISABLE                         <span class="comment">//禁用中断</span></span><br><span class="line">        &#125;;</span><br><span class="line">    gpio_config(&amp;io_config); <span class="comment">//配置GPIO与给定的设置。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">app_main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    gpio_init();</span><br><span class="line">    gpio_set_direction(GPIO_NUM_4,GPIO_MODE_INPUT);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>; <span class="comment">//按键按下次数</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (gpio_get_level(GPIO_NUM_4) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            vTaskDelay(pdMS_TO_TICKS(<span class="number">30</span>));</span><br><span class="line">            <span class="keyword">if</span> (gpio_get_level(GPIO_NUM_4) == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">while</span> (gpio_get_level(GPIO_NUM_4) == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    vTaskDelay(<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                cnt++;</span><br><span class="line">                gpio_set_level(GPIO_NUM_2, cnt % <span class="number">2</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, cnt);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        vTaskDelay(<span class="number">100</span> / portTICK_PERIOD_MS);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>电路连接</p><p><img src="C:\Users\Administrator\Desktop\工作日记（2022.5.23）\视频剪辑\素材\外设\GPIO\Untitled Sketch_bb.png" alt="Untitled Sketch_bb" style="zoom:80%;" /></p><p>注释：这里是RGB的LED灯，可以换LED二极管。</p><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2>]]></content>
      
      
      <categories>
          
          <category> ESP32外设 </category>
          
          <category> GPIO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
            <tag> 外设 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
